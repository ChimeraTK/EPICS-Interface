#!/bin/bash -e

TARGET_DIR_FINAL="$1"
EPICS_ARCH="$2"
EPICS_FULLVER="$3"
PROJECT_BINARY_DIR="`pwd`"
EPICS_BASE="${PROJECT_BINARY_DIR}/epics-base"
TARGET_DIR="${PROJECT_BINARY_DIR}/epics-temp"
LIB_DIR="${TARGET_DIR}/lib/${EPICS_ARCH}"
LIB_DIR_FINAL="${TARGET_DIR_FINAL}/lib/${EPICS_ARCH}"
BIN_DIR="${TARGET_DIR}/bin/${EPICS_ARCH}"

#######################################################################################################################
# Rename shared libraries, update their depedees and set the rpath

cd "${LIB_DIR}"

# make shared libraries and executables writeable first
for lib in *.so; do
  chmod +w "${lib}"
done
for exe in "${BIN_DIR}"/*; do
  chmod +w "${exe}"
done

# temp file, just used to conveniently restore timestamps of files
TMPFIL=`mktemp`

for lib in *.so; do
  fullname=`readlink "${lib}" || true`

  # if .so file is not a symlink: rename so the remaining treatment is identical
  if [ -z "$fullname" ]; then
    fullname="${lib}.${EPICS_FULLVER}"
    mv "${lib}" "${fullname}"
  fi

  # if symlink target already ends with "-ChimeraTK", there is nothing to do
  if [[ "$fullname" == *-ChimeraTK ]]; then
    echo "$lib -> $fullname (already ok)"
    continue
  fi

  echo "$lib -> $fullname -> $fullname-ChimeraTK"

  # Rename the library, update soname and link.
  # Note: dpkg-shlibdeps is sensitive to the order of the SONAME and RPATH entries in the shared library files. It
  # expects the SONAME after the RPATH. patchelf would put the entries in the opposite order if the SONAME and the
  # RPATH are set in the same command, hence we need to run patchelf twice to define the order as expected by
  # dpkg-shlibdeps.
  mv "${fullname}" "${fullname}-ChimeraTK"
  touch -r "${fullname}-ChimeraTK" "${TMPFIL}" # store timestmap
  @PATCHELF@ --set-rpath "${LIB_DIR_FINAL}" "${fullname}-ChimeraTK"
  @PATCHELF@ --set-soname "${fullname}-ChimeraTK" "${fullname}-ChimeraTK"
  touch -r "${TMPFIL}" "${fullname}-ChimeraTK" # restore timestamp
  ln -sfn "${fullname}-ChimeraTK" "${lib}"
  ln -sfn "${fullname}-ChimeraTK" "${fullname}"

  # update all other libraries linking against this lib
  for dependee in *.so; do
    if [ "${dependee}" == "${lib}" ]; then
      continue
    fi
    # this does nothing if 'dependee' does not actually depend on 'lib'
    touch -r "${dependee}" "${TMPFIL}" # store timestmap
    @PATCHELF@ --replace-needed "${fullname}" "${fullname}-ChimeraTK" "${dependee}"
    touch -r "${TMPFIL}" "${dependee}" # restore timestmap
  done

  # update all other binaries linking against this lib (and update their rpath along)
  for dependee in "${BIN_DIR}"/* "${TARGET_DIR}/lib/perl/"*/*/*.so; do
    # ignore non-elf files (like perl scripts)
    if ! @PATCHELF@ --print-rpath "${dependee}" > /dev/null 2>&1; then
      continue
    fi
    # this does nothing if 'dependee' does not actually depend on 'lib'
    chmod +w "${dependee}"
    touch -r "${dependee}" "${TMPFIL}" # store timestmap
    @PATCHELF@ --replace-needed "${fullname}" "${fullname}-ChimeraTK" --set-rpath "${LIB_DIR_FINAL}" "${dependee}"
    touch -r "${TMPFIL}" "${dependee}" # restore timestmap
  done

done

rm -f "${TMPFIL}"

#######################################################################################################################
# Vaguely related: Patch config files which are installed and contain the temporary install directory

rm -rf ${TARGET_DIR}/configure-patched
cp -r ${TARGET_DIR}/configure ${TARGET_DIR}/configure-patched
for cfg in "${TARGET_DIR}/configure-patched"/*; do
  if [ ! -f "${cfg}" ]; then
    continue
  fi
  chmod +w "${cfg}"
  sed -e "s!${TARGET_DIR}!${TARGET_DIR_FINAL}!g" -i "${cfg}"
done
